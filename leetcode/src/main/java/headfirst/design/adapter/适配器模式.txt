
适配器模式将一个类的接口转化为客户期望的另一个接口，适配器让原本不兼容的类变得兼容。


插座之间的适配。


对象适配：运用组合方式

类适配：运用继承方式

缺省的适配器

优先使用对象适配



java中的mouseListener就是




3. 模式中的角色

　　3.1 目标接口（Target）：客户所期待的接口。目标可以是具体的或抽象的类，也可以是接口。

　　3.2 需要适配的类（Adaptee）：需要适配的类或适配者类。

　　3.3 适配器（Adapter）：通过包装一个需要适配的对象，把原接口转换成目标接口。　　

4. 实现方式

   （1）类的适配器模式（采用继承实现）

     （2）对象适配器（采用对象组合方式实现）
     
意图：
你想使用一个已经存在的类，而它的接口不符合你的需求。
你想创建一个可以复用的类，该类可以与其他不相关的类或不可预见的类（即那些接口可能不一定兼容的类）协同工作。
（仅适用于对象A d a p t e r ）你想使用一些已经存在的子类，但是不可能对每一个都进行子类化以匹配它们的接口。对象适配器可以适配它的父类接口。