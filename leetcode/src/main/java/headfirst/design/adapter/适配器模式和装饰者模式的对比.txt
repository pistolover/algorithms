（1）装饰模式和适配器模式，都是通过封装其他对象达到设计目的的。

（2）理想的装饰模式在对被装饰对象进行功能增强时，要求具体构件角色、装饰角色的接口与抽象构件角色的接口完全一致；
而适配器模式则不然，一般而言，适配器模式并不要求对源对象的功能进行增强，只是利用源对象的功能而已，但是会改变源对象的接口，以便和目标接口相符合。
（3）装饰模式有透明和半透明两种，区别就在于接口是否完全一致。关于装饰模式的重要的事实是，很难找到理想的装饰模式。
一般而言，对一个对象进行功能增强的同时，都会导致加入新的行为，因此，装饰角色的接口比抽象构件角色的接口宽是很难避免的，这种现象存在于Java I/O库中多有的类型的链接流处理器中。
一个装饰类提供的新的方法越多，它离纯装饰模式的距离就越远，离适配器模式的距离也就越近。